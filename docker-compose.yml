version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
    networks:
      - app-network

  backend:
    build:
      context: ./src/backend
      dockerfile: ../../.docker/backend/Dockerfile
    container_name: backend
    ports:
      - "3001:3001"
    volumes:
      - ./src/backend:/app
    environment:
      MONGODB_URI: mongodb://mongodb:27017/mydatabase
    depends_on:
      - mongodb
    networks:
      - app-network

  scan:
    build:
      context: ./src/scan
      dockerfile: ../../.docker/scan/Dockerfile
    container_name: scan
    ports:
      - "3002:3002"
    volumes:
      - ./src/scan:/app
    environment:
      MONGODB_URI: mongodb://mongodb:27017/mydatabase
    depends_on:
      - mongodb
    networks:
      - app-network

  cron:
    build:
      context: ./src/cron
      dockerfile: ../../.docker/cron/Dockerfile
    container_name: cron
    ports:
      - "3003:3003"
    volumes:
      - ./src/cron:/app
    environment:
      MONGODB_URI: mongodb://mongodb:27017/mydatabase
    depends_on:
      - mongodb
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  frontend:
    build:
      context: ./src/frontend
      dockerfile: ../../.docker/frontend/Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
    depends_on:
      - backend
      - scan
      - cron
    networks:
      - app-network

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge
